import java.util.*;
class Solution {
	public static void main(String args[]) {
		Solution sl = new Solution();
		sl.combinationSum(new int[] {2,3,5}, 8);
	}
	
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(candidates);
        
        HashSet<List<Integer>> set = new HashSet<>();
        search(candidates,0,target,new ArrayList<Integer>(),result,set);
        return result;
    }
    public void search(int[] candidates,int index,int target,List<Integer> current, List<List<Integer>> result,HashSet<List<Integer>> set){
        if(target==0){
        	List<Integer> templist = new ArrayList<>();
        	Collections.copy(current, templist);
        	Collections.sort(templist);
	        if(!set.contains(templist)) {
	        set.add(templist);
	        result.add(new ArrayList<>(templist));}
            return;
        }
        if(target<0){
            return;
        }
        
        for(int i =0;i<candidates.length;i++){
            current.add(candidates[i]);
            search(candidates,i+1,target-candidates[i],current,result,set);
            current.remove(current.size()-1);
        }
    }
}