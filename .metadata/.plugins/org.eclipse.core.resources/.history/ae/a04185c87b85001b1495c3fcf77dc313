import java.util.*;
 //Definition for a binary tree node.
  class TreeNode {
      int val;
      TreeNode left;
      TreeNode right;
      TreeNode() {}
      TreeNode(int val) { this.val = val; }
      TreeNode(int val, TreeNode left, TreeNode right) {
          this.val = val;
          this.left = left;
          this.right = right;
      }
  }
 
class Basic {
//    public void flatten(TreeNode root) {
	public static void main(String args[]) {
		TreeNode root = new TreeNode(1);
		root.left = new TreeNode(2);
		root.right = new TreeNode(5);
		root.left.left = new TreeNode(3);
		root.left.right = new TreeNode(4);
		root.right.right = new TreeNode(6);
		
		   if(root == null ){return;}
	       // ArrayList<TreeNode> list = new ArrayList<TreeNode>();
	        Stack<TreeNode> st = new Stack<TreeNode>();
	         st.push(root);
	        
	        while(!st.isEmpty()){
	            TreeNode curr = st.pop();
	            if(curr.right != null){
	                st.push(curr.right);
	            }
	             
	            if(curr.left != null){
	                st.push(curr.left);
	            }
	            
	            if(!st.isEmpty()){
	                curr.right = st.peek();
	            }
	            curr.left = null;
	        }
	     
        int k=0;
    }
}